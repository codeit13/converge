services:
  # FastAPI Backend Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-backend
    ports:
      - "8001:8001"  # internal mapping; external access is via the reverse proxy
    volumes:
      - ./app:/app
      - ./mcp-servers:/app/mcp-servers
    env_file:
      - ./app/.env
    environment:
      - MONGODB_URL=mongodb://mongo:27017
      - MONGODB_DB=converge
      - VIRTUAL_HOST=converge-backend.sleebit.com
      - VIRTUAL_PORT=8001
      - LETSENCRYPT_HOST=converge-backend.sleebit.com
      - LETSENCRYPT_EMAIL=thesleebit@gmail.com
    depends_on:
      - mongo
      - sequential
      - twitter
      - youtube
    networks:
      - proxy-network

  # Frontend Vue.js Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: frontend-app
    ports:
      - "8080:80"  # internal mapping; external access is via the reverse proxy
    environment:
      - VIRTUAL_HOST=converge.sleebit.com
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=converge.sleebit.com
      - LETSENCRYPT_EMAIL=thesleebit@gmail.com
    depends_on:
      - api
    networks:
      - proxy-network

  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - proxy-network

  # MCP Server: Sequential Service
  sequential:
    image: node:18-alpine
    container_name: sequential-service
    working_dir: /app
    volumes:
      - ./mcp-servers/sequential:/app
    command: sh -c "yarn install && node index.js"
    ports:
      - "4003:4003"
    env_file:
      - ./mcp-servers/.env
    networks:
      - proxy-network

  # MCP Server: Twitter Service
  twitter:
    image: node:18-alpine
    container_name: twitter-service
    working_dir: /app
    volumes:
      - ./mcp-servers/twitter:/app
    command: sh -c "yarn install && node index.js"
    ports:
      - "4004:4004"
    env_file:
      - ./mcp-servers/.env
    networks:
      - proxy-network

  # MCP Server: YouTube Service
  youtube:
    image: node:22-slim
    container_name: youtube-service
    working_dir: /app
    volumes:
      - ./mcp-servers/youtube:/app
    command: sh -c "apt-get update && apt-get install -y ffmpeg curl python3 && yarn install && yarn build && node dist/index.js"
    ports:
      - "4005:4005"
    env_file:
      - ./mcp-servers/.env
    networks:
      - proxy-network

  # Nginx Reverse Proxy
  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - vhost:/etc/nginx/vhost.d
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-network

  # Letâ€™s Encrypt Companion for SSL certificates
  acme-companion:
    container_name: acme-companion
    image: nginxproxy/acme-companion
    environment:
      - DEFAULT_EMAIL=thesleebit@gmail.com
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-network

networks:
  proxy-network:
    driver: bridge

volumes:
  mongo-data:
  certs:
  acme:
  html:
  vhost:
  conf:
